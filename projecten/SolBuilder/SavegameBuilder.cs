using System.Collections.Generic;
using Flowerz.Model;

namespace SolBuilder {
    public class SavegameBuilder {
        private readonly FlowerzGame _game;

        public SavegameBuilder( FlowerzGame game ) {
            _game = game;
        }


        public byte[] ToByteArray() {
            var gameBytes = new List<byte>();

            var boardBytes = _game.Board.ToByteArray();
            var queueBytes = _game.Queue.ToByteArray();

            FillPreBoardBytes( gameBytes );

            gameBytes.AddRange( boardBytes );
            gameBytes.AddRange( queueBytes );

            CreateCurrentPieceIndex( gameBytes );

            CreatePostCurrentPieceIndexBytes( gameBytes );

            return gameBytes.ToArray();
        }

        private static void FillPreBoardBytes( List<byte> gameBytes ) {
            gameBytes.AddRange( new List<byte> {
				0x00, 0xBF, 0x00, 0x00, 0x06, 0x3B, 0x54, 0x43, 0x53, 0x4F, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
				0x00, 0x0B, 0x46, 0x6C, 0x6F, 0x77, 0x65, 0x72, 0x7A, 0x53, 0x61, 0x76, 0x65, 0x00, 0x00, 0x00, 
				0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x30, 0x00, 0x40, 0x34, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x31, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65,
				0x76, 0x65, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41,
				0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x34, 0x00, 0x40, 0x24, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x35, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65,
				0x76, 0x65, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41,
				0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x39, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x41, 0x63, 0x68, 0x69, 0x65,
                0x76, 0x65, 0x31, 0x30, 0x00, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
                0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x31, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x12, 0x6D, 0x69, 0x6C, 0x6C, 0x69, 0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64,
                0x73, 0x50, 0x6C, 0x61, 0x79, 0x65, 0x64, 0x00, 0x40, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x0E, 0x66, 0x6C, 0x6F, 0x77, 0x65, 0x72, 0x73, 0x50, 0x6C, 0x61, 0x6E, 0x74, 0x65,
                0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x61, 0x6E, 0x69,
                0x6D, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x73, 0x4F, 0x6E, 0x01, 0x01, 0x00, 0x00, 0x07, 0x6D, 0x75,
				0x73, 0x69, 0x63, 0x4F, 0x6E, 0x01, 0x01, 0x00, 0x00, 0x08, 0x73, 0x6F, 0x75, 0x6E, 0x64, 0x73,
				0x4F, 0x6E, 0x01, 0x01, 0x00, 0x00, 0x06, 0x74, 0x69, 0x70, 0x73, 0x4F, 0x6E, 0x01, 0x01, 0x00,
				0x00, 0x0A, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x73, 0x08, 0x00, 0x00, 0x00,
				0x05, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x31,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x32, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x01, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
				0x00, 0x00, 0x0E, 0x68, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x4D, 0x6F, 0x64, 0x65,
				0x73, 0x08, 0x00, 0x00, 0x00, 0x05, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x01, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x33, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x0B
			} );
        }

        private static void CreateCurrentPieceIndex( List<byte> gameBytes ) {
            gameBytes.AddRange( new List<byte> {
				0x63, 0x75, 0x72, 0x72, 0x65, 0x6E, 0x74, 0x50, 0x69, 0x65, 0x63, 0x65, 0x49, 0x6E, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05
			} );
        }

        private static void CreatePostCurrentPieceIndexBytes( List<byte> gameBytes ) {
            gameBytes.AddRange( new List<byte> {
				0x4C, 0x65, 0x76, 0x65, 0x6C, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
				0x05, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
				0x00, 0x0A, 0x52, 0x6F, 0x75, 0x6E, 0x64, 0x53, 0x63, 0x6F, 0x72, 0x65, 0x00, 0x00, 0x00, 0x00, 
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x45, 0x78, 0x70, 0x65, 0x72, 0x74, 0x4D, 0x6F, 
				0x64, 0x65, 0x01, 0x00, 0x00, 0x00, 0x0E, 0x46, 0x6C, 0x6F, 0x77, 0x65, 0x72, 0x4F, 0x6E, 0x53, 
				0x68, 0x6F, 0x76, 0x65, 0x6C, 0x01, 0x00, 0x00, 0x00, 0x0E, 0x44, 0x6F, 0x75, 0x62, 0x6C, 0x65, 
				0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
				0x00, 0x00, 0x00, 0x0E, 0x54, 0x72, 0x69, 0x70, 0x6C, 0x65, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 
				0x65, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x51, 0x75, 
				0x61, 0x64, 0x43, 0x61, 0x73, 0x63, 0x61, 0x64, 0x65, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
				0x00, 0x00, 0x00, 0x00
			} );
        }
    }
}